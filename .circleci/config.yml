version: 2.1
jobs:
  build:
    docker:
      - image: johannesloetzsch/nix-flake:latest
    steps:
      - run:
          name: Disable Sandbox
          command: mkdir -p ~/.config/nix/; echo 'sandbox = false' >> ~/.config/nix/nix.conf;
      - run:
          name: Allow qemu to be used in dockerTools.buildImage.runAsRoot
          command: mkdir -p ~/.config/nix/; echo 'system-features = kvm' >> ~/.config/nix/nix.conf;
      - checkout
      - restore_cache:
          keys:
            - nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}
            - nix
      - run:
          name: Trivial build
          command: |
            groupadd --system nobody && useradd --system -g nobody nobody
            mkdir -p /usr/bin && nix shell nixpkgs#which --command bash -c 'ln -s $(which env) /usr/bin/'
            nix develop .#trivial --command npx yarn run build-prod
      - run:
          name: Pure build
          command: echo TODO
      - save_cache:
          key: nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}
          paths:
            - /nix/
  deploy:
    docker:
      - image: johannesloetzsch/nix-flake:latest
    steps:
      - run:
          name: Disable Sandbox
          command: mkdir -p ~/.config/nix/; echo 'sandbox = false' >> ~/.config/nix/nix.conf;
      - checkout
      - restore_cache:
          keys:
            - nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}
            - nix
      - run:
          name: Trivial build  ## TODO use the result from the previous build
          command: |
            groupadd --system nobody && useradd --system -g nobody nobody
            mkdir -p /usr/bin && nix shell nixpkgs#which --command bash -c 'ln -s $(which env) /usr/bin/'
            nix develop .#trivial --command npx yarn run build-prod
#     - run: nix shell .#deploy --command deploy ./index.html index.html  ## create a $GITHUB_TOKEN for the project first
      - add_ssh_keys
      - run:
          name: CD
          command: |
            cat .circleci/known_hosts >> ~/.ssh/known_hosts
            git config --global user.email "build@circleci.com"
            git config --global user.name "CI/CD"
            git switch -c live
            git add -f www
            git commit -m build
            git remote add deployment deploy-pergola@live.pergola.gra.one:~/live/frontend
            git push --force deployment
workflows:
  version: 2
  build+test+deploy:
    jobs:
      - build:
          filters:  ## tags+branches
            tags:
              only: /.*/
      - deploy:
          context: deployment  ## provide $GITHUB_TOKEN
          requires:
            - build  ## TODO implement tests and run them as requirement
          filters:  ## tags+master
            tags:
              only: /.*/
            branches:
              only:
                - master
