version: 2.1
jobs:
  build:
    docker:
      - image: johannesloetzsch/nix-flake:latest
    steps:
      - run:
          name: Disable Sandbox
          command: mkdir -p ~/.config/nix/; echo 'sandbox = false' >> ~/.config/nix/nix.conf;
      - run:
          name: Allow qemu to be used in dockerTools.buildImage.runAsRoot
          command: mkdir -p ~/.config/nix/; echo 'system-features = kvm' >> ~/.config/nix/nix.conf;
      - checkout
      - restore_cache:
          keys:
            - nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}
            - nix-{{ checksum "flake.lock" }}  ## the cache will be cleaned on updates
      - run:
          name: Trivial build
          command: |
            nix develop .#trivial --command npx yarn run build-prod
            nix-store --delete /nix/store/*-www || true
            nix-store --add www
      - run:
          name: Pure build
          command: echo TODO
      - save_cache:
          ## As long as we want reuse nonpure builds, we always save
          key: nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}-{{ .BuildNum }}
          paths:
            - /nix/
  deploy-live:
    docker:
      - image: johannesloetzsch/nix-flake:latest
    steps:
      - run:
          name: Disable Sandbox
          command: mkdir -p ~/.config/nix/; echo 'sandbox = false' >> ~/.config/nix/nix.conf;
      - checkout
      - restore_cache:
          keys:
            - nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}
            - nix
      - add_ssh_keys
      - run:
          name: CD
          command: |
            cat .circleci/known_hosts >> ~/.ssh/known_hosts
            git config --global user.email "build@circleci.com"
            git config --global user.name "CI/CD"
            git switch -c live
            cp -r /nix/store/*-www www
            git add -f www
            git commit -m build
            git remote add deployment deploy-pergola@live.pergola.gra.one:~/live/frontend
            git push --force deployment
      - run:
          name: Check Availability
          command: |
            URL="https://live.pergola.gra.one/"
            TIMEOUT=60
            (for i in $(seq $TIMEOUT); do
              [ $(nix shell nixpkgs#curl --command curl -s -o /dev/null -w "%{http_code}" $URL) = "200" ] && echo online && exit 0
              echo -n .; sleep 1
             done && echo offline && false
            )
  deploy-experimental:  ## TODO get rid of the shared code with deploy-live
    docker:
      - image: johannesloetzsch/nix-flake:latest
    steps:
      - run:
          name: Disable Sandbox
          command: mkdir -p ~/.config/nix/; echo 'sandbox = false' >> ~/.config/nix/nix.conf;
      - checkout
      - restore_cache:
          keys:
            - nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}
            - nix
      - add_ssh_keys
      - run:
          name: CD
          command: |
            cat .circleci/known_hosts >> ~/.ssh/known_hosts
            git config --global user.email "build@circleci.com"
            git config --global user.name "CI/CD"
            git switch -c experimental
            cp -r /nix/store/*-www www
            git add -f www
            git commit -m build
            git remote add deployment deploy-pergola@experimental.pergola.gra.one:~/experimental/frontend
            git push --force deployment
      - run:
          name: Check Availability
          command: |
            URL="https://experimental.pergola.gra.one/"
            TIMEOUT=60
            (for i in $(seq $TIMEOUT); do
              [ $(nix shell nixpkgs#curl --command curl -s -o /dev/null -w "%{http_code}" $URL) = "200" ] && echo online && exit 0
              echo -n .; sleep 1
             done && echo offline && false
            )
  android_build-deploy:
    docker:
      - image: johannesloetzsch/nix-flake:latest
    steps:
      - run:
          name: Disable Sandbox
          command: mkdir -p ~/.config/nix/; echo 'sandbox = false' >> ~/.config/nix/nix.conf;
      - checkout
      - restore_cache:
          keys:
            - nix-{{ checksum "flake.lock" }}-{{ checksum "flake.nix" }}
            - nix
      - run:
          name: Trivial build
          command: |
            nix develop .#trivial-android --command npx yarn run build-prod-cordova-android
            cp cordova/platforms/android/app/build/outputs/apk/*/*.apk pergola.apk
      - run:
          name: Pure build
          command: echo TODO
#      - run: nix shell .#deploy --command deploy ./pergola.apk pergola.apk || true  ## TODO once the apk works ; use fixed version of github-release
      - add_ssh_keys
      - run:
          name: CD
          command: |
            cat .circleci/known_hosts >> ~/.ssh/known_hosts
            git config --global user.email "build@circleci.com"
            git config --global user.name "CI/CD"
            git switch -c fdroid
            git add -f *.apk
            git commit -m 'apk build'
            git remote add deployment deploy-pergola@live.pergola.gra.one:~/live/fdroid
            git push --force deployment
workflows:
  version: 2
  build+test+deploy:
    jobs:
      - build:
          filters:  ## tags+branches
            tags:
              only: /.*/
      - deploy-live:
          requires:
            - build
          filters:  ## tags
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-experimental:
          requires:
            - build
          filters:  ## tags+master
            tags:
              only: /.*/
            branches:
              only:
                - master
      - android_build-deploy:
          context: deployment
          requires:
            - build
          filters:  ## tags
            tags:
              only: /.*/
            branches:
              ignore: /.*/
